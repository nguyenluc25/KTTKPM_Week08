services:  api-gateway:    build: ./api-gateway    ports:      - '8080:8080'    depends_on:      - product-service      - order-service      - customer-service  product-service:    build: ./product-service    depends_on:      - product-db      - rabbitmq    environment:      - SPRING_DATASOURCE_URL=jdbc:postgresql://product-db:5432/products      - SPRING_DATASOURCE_USERNAME=postgres      - SPRING_DATASOURCE_PASSWORD=password      - SPRING_RABBITMQ_HOST=rabbitmq  order-service:    build: ./order-service    depends_on:      - order-db      - rabbitmq    environment:      - SPRING_DATASOURCE_URL=jdbc:postgresql://order-db:5432/orders      - SPRING_DATASOURCE_USERNAME=postgres      - SPRING_DATASOURCE_PASSWORD=password      - SPRING_RABBITMQ_HOST=rabbitmq  customer-service:    build: ./customer-service    depends_on:      - customer-db    environment:      - SPRING_DATASOURCE_URL=jdbc:postgresql://customer-db:5432/customers      - SPRING_DATASOURCE_USERNAME=postgres      - SPRING_DATASOURCE_PASSWORD=password  product-db:    image: postgres:13    environment:      - POSTGRES_USER=postgres      - POSTGRES_PASSWORD=password      - POSTGRES_DB=products    volumes:      - product-data:/var/lib/postgresql/data  order-db:    image: postgres:13    environment:      - POSTGRES_USER=postgres      - POSTGRES_PASSWORD=password      - POSTGRES_DB=orders    volumes:      - order-data:/var/lib/postgresql/data  customer-db:    image: postgres:13    environment:      - POSTGRES_USER=postgres      - POSTGRES_PASSWORD=password      - POSTGRES_DB=customers    volumes:      - customer-data:/var/lib/postgresql/data  rabbitmq:    image: rabbitmq:3-management    ports:      - '5672:5672'      - '15672:15672'volumes:  product-data:  order-data:  customer-data: